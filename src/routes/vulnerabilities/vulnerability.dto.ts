import { IsString, IsOptional, IsInt, ValidateNested, IsDefined, IsIn } from 'class-validator';
import Audit from '../../entities/audit.entity';
import Vulnerability from '../../entities/vulnerability.entity';
import { Type } from 'class-transformer';
import Company from '../../entities/company.entity';
import { VulnerabilityStatus } from '../../utils/constants';




class CreateVulnerabilityDto {

    
    @IsOptional()
    @IsString()
    public communication_date: string;
    
    @IsDefined()
    @IsString()
    public description: string;
    
    @IsOptional()
    @IsString()
    public discovery_date: string;
    
    @IsDefined()
    @IsString()
    public executedText: string;
    
    @IsDefined()
    @IsString()
    public name: string;

    @IsDefined()
    @IsIn([VulnerabilityStatus.OPEN])
    @IsInt()
    risk: number;

    @IsDefined()
    @IsString()
    public solution: string;

    @IsDefined()
    @ValidateNested()
    @Type(() => Audit)
    public audit: Audit;

    @IsOptional()
    @ValidateNested()
    @Type(() => Vulnerability)
    public linkedVulnerability: Vulnerability;

    @IsDefined()
    @ValidateNested()
    @Type(() => Company)
    public company : Company
}


class FindVulnerabilityDto {

    @IsOptional()
    @IsString()
    public name: string;

    @IsOptional()
    @IsString()
    public communication_date: string;

    @IsOptional()
    @IsString()
    public description: string;

    @IsOptional()
    @IsString()
    public discovery_date: string;

    @IsOptional()
    @IsString()
    public executedText: string;

    @IsOptional()
    @IsInt()
    risk: number;

    @IsOptional() @IsString()
    public solution: string;


    @IsOptional()
    @Type(() => Audit)
    public audit: Audit;

    @IsOptional()
    @ValidateNested()
    @Type(() => Vulnerability)
    public linkedVulnerability: Vulnerability;
}



class UpdateVulnerabilityDto {
    
    
    @IsOptional()
    @IsString()
    public communication_date: string;
    
    @IsOptional()
    @IsString()
    public description: string;
    
    @IsOptional()
    @IsString()
    public discovery_date: string;
    
    @IsOptional()
    @IsString()
    public executedText: string;
    
    @IsOptional()
    @IsString()
    public name: string;
    
    @IsOptional()
    @IsIn([VulnerabilityStatus.ASSUMED,VulnerabilityStatus.CLOSED,VulnerabilityStatus.FALSEPOSITIVE,VulnerabilityStatus.OPEN,VulnerabilityStatus.REVISION])
    @IsInt()
    risk: number;
    
    @IsOptional()
    @IsString()
    public solution: string;
    
    @IsOptional()
    @IsInt()
    status: number;

    @IsOptional()
    @IsString()
    public resolution_date: string;    
    
    @IsOptional()
    @ValidateNested()
    @Type(() => Vulnerability)
    public linkedVulnerability: Vulnerability;
    
    
}

export {
    UpdateVulnerabilityDto,
    CreateVulnerabilityDto,
    FindVulnerabilityDto
}
