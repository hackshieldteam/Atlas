import {Entity, Column, PrimaryColumn, PrimaryGeneratedColumn, OneToMany, ManyToOne, ManyToMany, OneToOne, JoinTable, JoinColumn} from "typeorm";
import Audit from "./audit.entity";
import Evidence from "./evidence.entity";
import Jira from "./jira.entity";
import { IsInt, IsOptional, IsString, ValidateNested, IsDefined, IsArray } from "class-validator";
import { Type } from "class-transformer";
import Company from "./company.entity";


export enum VulnerabilityStatus {
    OPEN = 0,
    CLOSED = 1,
    FALSEPOSITIVE = 2,
    REVISION = 3,
    ASSUMED = 4
}

@Entity()
class Vulnerability{

    @IsDefined()
    @IsInt()
    @PrimaryGeneratedColumn()
    id : number;

    @IsString()
    @Column("date",{nullable : true})
    communication_date : string;
    
    @IsString()
    @Column("text")
    description : string;
    
    @IsString()
    @Column("date",{nullable : true})
    discovery_date : string;

    @IsString()
    @Column("text")
    executedText : string;

    @IsString()
    @Column("varchar",{length : 30})
    name : string;

    @IsString()
    @Column("date",{nullable : true})
    resolution_date : string;

    @IsInt()
    @Column("smallint")
    risk : number;


    @IsString()
    @Column("text")
    solution : string;

    @IsInt()
    @Column({ type : "smallint", default : VulnerabilityStatus.OPEN })
    status : number;

    @ValidateNested()
    @Type(()=> Audit)
    @ManyToOne(() => Audit, (audit : Audit) => audit.vulnerabilities, { nullable : false, onDelete : "CASCADE"})
    audit : Audit

    @ValidateNested({
        each : true
    })
    @IsArray()
    @Type(()=> Jira)
    @OneToMany(() => Jira, jira => jira.vulnerability,{
        cascade : true
    })
    jira : Jira[];

    @ValidateNested({
        each : true
    })
    @IsArray()
    @Type(()=> Evidence)
    @OneToMany(() => Evidence, evidence => evidence.vulnerability,{
        cascade : true
    })
    evidences : Evidence[];

    @ValidateNested()
    @Type(()=> Vulnerability)
    @OneToOne(() => Vulnerability, vulnerability => vulnerability.id, { nullable : true, onDelete : "SET NULL"})
    @JoinColumn()
    linkedVulnerability! : Vulnerability;

    @ValidateNested()
    @Type(() => Company)
    @ManyToOne( type => Company, (company : Company) => company.assets)
    public company : Company;
    


}

export default Vulnerability;
